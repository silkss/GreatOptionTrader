// <auto-generated />
using System;
using GreatOptionTrader.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreatOptionTrader.Migrations
{
    [DbContext(typeof(GOTContext))]
    [Migration("20250815172133_new id for order")]
    partial class newidfororder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Core.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageFilledPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("BrokerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Commission")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FilledVolume")
                        .HasColumnType("TEXT");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LimitPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("PermId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("PK_order");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GreatOptionTrader.Models.InstrumentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("InstrumentGroups");
                });

            modelBuilder.Entity("GreatOptionTrader.Models.OptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InstrumentGroupId")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("MarketRulesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Multiplier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PriceMagnifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Right")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Strike")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TradingClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentGroupId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Core.Order", b =>
                {
                    b.HasOne("GreatOptionTrader.Models.OptionModel", null)
                        .WithMany("Orders")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreatOptionTrader.Models.OptionModel", b =>
                {
                    b.HasOne("GreatOptionTrader.Models.InstrumentGroup", null)
                        .WithMany("Options")
                        .HasForeignKey("InstrumentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreatOptionTrader.Models.InstrumentGroup", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("GreatOptionTrader.Models.OptionModel", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
